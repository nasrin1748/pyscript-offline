const t="array",n="function",r="object",{isArray:o}=Array,e=(t,n)=>n,u=t=>y.bind(t),c=t=>typeof t===n?(t=>t())(t):t;function y(){return this}const f=(t,n)=>({t:t,v:n}),i=(n,u=e)=>{let c=typeof n,y=n;return c===r&&(o(n)?c=t:({t:c,v:y}=n)),u(c,y)},l=(r,o)=>r===n||r===t?o:f(r,o),s=(n,e=l)=>{const u=null===n?"null":typeof n;return e(u===r&&o(n)?t:u,n)};export{u as bound,f as target,c as unbound,i as unwrap,s as wrap};
