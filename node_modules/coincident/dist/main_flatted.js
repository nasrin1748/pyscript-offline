const e=Promise.withResolvers.bind(Promise);var t={ref:0,array:1,object:2,number:3,string:4,true:5,false:6,null:7,buffer:8,view:9,symbol:10,date:11,bigint:12,undefined:13,map:14,set:15,regexp:16,error:17};const{assign:r,create:s}=Object;let n="coincident-",a=!0;try{new SharedArrayBuffer(4,{maxByteLength:8}),n+=crypto.randomUUID()}catch(e){a=!1,n+=Math.random().toString(36).substring(2)}const o=2*Int32Array.BYTES_PER_ELEMENT,c={byteOffset:o,useUTF16:!0,circular:!0},i=(e,t,r)=>{const s="then"!==t;return s&&(e[t]=r),s},{getPrototypeOf:u}=Object,l=e=>{const t=typeof e;switch(t){case"function":case"undefined":return"";case"object":return null===e?"null":"object";default:return t}},{isArray:f}=Array,{isView:p}=ArrayBuffer,{stringify:b}=JSON,g=(e,r,s)=>{const n=r.get(s);return"number"==typeof n?(e.push(t.ref,n),!0):(r.set(s,e.length),!1)},h=(e,r,s,n=l(s))=>{switch(n){case"null":e.push(t.null);break;case"object":if(g(e,r,s))break;switch(!0){case f(s):{const n=s.length;e.push(t.array,n);for(let t=0;t<n;t++)h(e,r,s[t]);break}case p(s):{const{BYTES_PER_ELEMENT:n,buffer:a,byteOffset:o,length:c}=s;if(e.push(t.view,(e=>{for(;!(e.name in globalThis);)e=u(e);return e.name})(s.constructor),o,c!==(a.byteLength-o)/n?c:0),g(e,r,a))break;s=a}case s instanceof ArrayBuffer:{const r=s.byteLength,n=s.resizable?s.maxByteLength:0;if(e.push(t.buffer,r,n),r){const t=new Uint8Array(s,0,r);for(let r=0;r<t.length;r+=32767)e.push.apply(e,t.subarray(r,r+32767))}break}case s instanceof Date:e.push(t.date,+s);break;case s instanceof Map:{const n=e.push(t.map,0);let a=0;for(const[t,n]of s){const s=l(t),o=l(n);s&&o&&(h(e,r,t,s),h(e,r,n,o),a++)}e[n-1]=a;break}case s instanceof Set:{const n=e.push(t.set,0);let a=0;for(const t of s){const s=l(t);s&&(h(e,r,t,s),a++)}e[n-1]=a;break}case s instanceof RegExp:e.push(t.regexp,s.source,s.flags);break;case s instanceof Error:e.push(t.error,s.name,s.message,s.stack,s.cause);break;default:{if("toJSON"in s){const n=s.toJSON();if(n===s){e.push(t.object,0);break}if(g(e,r,s=n))break}const n=e.push(t.object,0);let a=0;for(const t in s){const n=s[t],o=l(n);o&&(h(e,r,t,"string"),h(e,r,n,o),a++)}e[n-1]=a;break}}break;case"boolean":e.push(s?t.true:t.false);break;case"string":if(g(e,r,s))break;e.push(t.string,s);break;case"bigint":e.push(t.bigint,s.toString());break;case"symbol":{const r=(e=>{const t=String(e).slice(7,-1);return t.startsWith("Symbol.")||Symbol.keyFor(e)?t:""})(s);if(r){e.push(t.symbol,r);break}}case"":e.push(t.undefined);break;default:e.push(t[n],s)}},y=(e=>({byteOffset:t=0}={})=>(r,s)=>{const n=e(r),a=n.length,o=2*a+t;s.byteLength<o&&s.grow(o);const c=new Uint16Array(s,t,a);for(let e=0;e<a;e++)c[e]=n.charCodeAt(e);return a})((e=>b((e=>{const t=[];return h(t,new Map,e),t})(e)))),m=[],d=new WeakSet,k=(...e)=>(d.add(e),e),w="InstallTrigger"in globalThis?n:"",{notify:E}=Atomics,S=e=>e;var T=t=>{const n=t?.transform,o=(t?.encoder||y)(c),u=!1!==t?.transfer;class l extends globalThis.Worker{constructor(t,c){const{port1:l,port2:f}=new MessageChannel,[p,b]=((t=e=>e)=>{const r=new Map;let s=0;return[()=>{let n;do{n=t(s++)}while(r.has(n));const a=e();return r.set(n,a),[n,a.promise]},(e,t,s)=>{const n=r.get(e);r.delete(e),s?n?.reject(s):n?.resolve(t)}]})(S),g=new Map,h=s(null);let y="";super(t,r({type:"module"},c)).proxy=new Proxy(h,{get:(e,t)=>{if("then"===t)return;let r=g.get(t);return r||g.set(t,r=(...e)=>{const r=((e,t)=>{let r=m;return e&&d.has(t.at(-1)||m)&&(r=t.pop(),d.delete(r)),r})(u,e),[s,a]=p();return l.postMessage([s,t,n?e.map(n):e],r),((e,t)=>{if(y){const r=setTimeout(console.warn,3e3,`ðŸ’€ðŸ”’ - is proxy.${y}() awaiting proxy.${t}() ?`);e=e.then((e=>(clearTimeout(r),e)),(e=>(clearTimeout(r),Promise.reject(e))))}return e})(a,t)}),r},set:i}),super.postMessage(w,[f]),a&&w&&super.addEventListener("message",(e=>{const{data:t}=e;t?.ID===w&&((e=>{e.stopImmediatePropagation(),e.preventDefault()})(e),l.onmessage(t))})),l.onmessage=async({data:e})=>{const t=e[0],r=typeof t;if("number"===r)b.apply(null,e);else if(y=e[1],await(async(e,t,r)=>{try{const s=await t[e[1]].apply(null,e[2]);e[1]=r?r(s):s,e[2]=null}catch(t){e[2]=t}})(e,h,n),y="","string"===r)l.postMessage(e);else{const r=e[2]||e[1];t[1]=void 0===r?0:o(r,t.buffer),t[0]=1,E(t,0)}}}}return{Worker:l,native:a,transfer:k}};export{T as default};
