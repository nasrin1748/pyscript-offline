const e=Promise.withResolvers.bind(Promise);const{stringify:t}=JSON,r=(n=t,({byteOffset:e=0}={})=>(t,r)=>{const s=n(t),o=s.length,a=2*o+e;r.byteLength<a&&r.grow(a);const c=new Uint16Array(r,e,o);for(let e=0;e<o;e++)c[e]=s.charCodeAt(e);return o});var n;const s=[],o=new WeakSet,a=(...e)=>(o.add(e),e),{assign:c,create:i}=Object;let l="coincident-",u=!0;try{new SharedArrayBuffer(4,{maxByteLength:8}),l+=crypto.randomUUID()}catch(e){u=!1,l+=Math.random().toString(36).substring(2)}const p={byteOffset:2*Int32Array.BYTES_PER_ELEMENT,useUTF16:!0,circular:!0},g=(e,t,r)=>{const n="then"!==t;return n&&(e[t]=r),n},y="InstallTrigger"in globalThis?l:"",{notify:d}=Atomics,f=e=>e;var m=t=>{const n=t?.transform,l=(t?.encoder||r)(p),m=!1!==t?.transfer;class h extends globalThis.Worker{constructor(t,r){const{port1:a,port2:p}=new MessageChannel,[h,w]=((t=e=>e)=>{const r=new Map;let n=0;return[()=>{let s;do{s=t(n++)}while(r.has(s));const o=e();return r.set(s,o),[s,o.promise]},(e,t,n)=>{const s=r.get(e);r.delete(e),n?s?.reject(n):s?.resolve(t)}]})(f),b=new Map,T=i(null);let v="";super(t,c({type:"module"},r)).proxy=new Proxy(T,{get:(e,t)=>{if("then"===t)return;let r=b.get(t);return r||b.set(t,r=(...e)=>{const r=((e,t)=>{let r=s;return e&&o.has(t.at(-1)||s)&&(r=t.pop(),o.delete(r)),r})(m,e),[c,i]=h();return a.postMessage([c,t,n?e.map(n):e],r),((e,t)=>{if(v){const r=setTimeout(console.warn,3e3,`ðŸ’€ðŸ”’ - is proxy.${v}() awaiting proxy.${t}() ?`);e=e.then((e=>(clearTimeout(r),e)),(e=>(clearTimeout(r),Promise.reject(e))))}return e})(i,t)}),r},set:g}),super.postMessage(y,[p]),u&&y&&super.addEventListener("message",(e=>{const{data:t}=e;t?.ID===y&&((e=>{e.stopImmediatePropagation(),e.preventDefault()})(e),a.onmessage(t))})),a.onmessage=async({data:e})=>{const t=e[0],r=typeof t;if("number"===r)w.apply(null,e);else if(v=e[1],await(async(e,t,r)=>{try{const n=await t[e[1]].apply(null,e[2]);e[1]=r?r(n):n,e[2]=null}catch(t){e[2]=t}})(e,T,n),v="","string"===r)a.postMessage(e);else{const r=e[2]||e[1];t[1]=void 0===r?0:l(r,t.buffer),t[0]=1,d(t,0)}}}}return{Worker:h,native:u,transfer:a}};export{m as default};
